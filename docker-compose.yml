services:
  database:
    &database
    restart: always
    profiles:
      - prod
    build:
      dockerfile: ./config/mysql/Dockerfile
      args:
        - MYSQL_DATABASE=${DB_DATABASE}
    environment:
      - MYSQL_DATABASE=${DB_DATABASE}
      - MYSQL_ROOT_PASSWORD=${DB_PASSWORD}
      - MYSQL_ALLOW_EMPTY_PASSWORD=yes
    volumes:
      - "db_data:/var/lib/mysql/"
    command: --lower_case_table_names=1
  
  database-dev:
    <<: *database
    restart: on-failure
    profiles:
      - dev
    ports:
      - 3306:3306
    environment:
      - MYSQL_USER=${DB_USERNAME}
      - MYSQL_PASSWORD=${DB_PASSWORD}
      - MYSQL_DATABASE=${DB_DATABASE}
      - MYSQL_ROOT_PASSWORD=${DB_PASSWORD}
  
  php:
    &php
    profiles:
      - prod
    restart: always
    build:
      dockerfile: ./config/php/Dockerfile.prod
    volumes:
      - session_data:/var/www/sessions/
    env_file:
      - .env
    depends_on:
      - database
  
  php-dev:
    <<: *php
    profiles:
      - dev
    build:
      dockerfile: ./config/php/Dockerfile.dev
    volumes:
      - ./php/:/var/www/html/
      - ./vendor/:/var/www/html/vendor/
      - session_data:/var/www/sessions/
    ports:
      - 9000:9000
    depends_on:
      - database-dev
  
  rust:
    &rust
    profiles:
      - prod
    restart: always
    build:
      dockerfile: ./config/rust/Dockerfile.prod
    env_file:
      - .env
    environment:
      - DATABASE_URL=mysql://${DB_USERNAME}:${DB_PASSWORD}@database:3306/${DB_DATABASE}
      - OVERSEER_ROOT=/php/
    volumes:
      - session_data:${OVERSEER_PHP_SESSIONS_ROOT}
    depends_on:
      - database
  
  rust-dev:
    <<: *rust
    profiles:
      - dev
    build:
      dockerfile: ./config/rust/Dockerfile.dev
    volumes:
      - ./rust/:/rust/
      - ./php/:/php/
      - session_data:${OVERSEER_PHP_SESSIONS_ROOT}
    environment:
      - DATABASE_URL=mysql://${DB_USERNAME}:${DB_PASSWORD}@database-dev:3306/${DB_DATABASE}
      - OVERSEER_ROOT=/php/
    ports:
      - 8010:8010
    depends_on:
      - database-dev

  proxy:
    &proxy
    profiles:
      - prod
    image: caddy:2.10-alpine
    restart: always
    build:
      context: ./config/caddy
    cap_add:
      - NET_ADMIN
    ports:
      - 8000:8000
    volumes:
      - ./config/caddy/Caddyfile:/etc/caddy/Caddyfile
      - caddy_data:/data
      - caddy_config:/config
    environment:
      - SITE_HOSTNAME=${SITE_HOSTNAME}
      - RUST_URI=http://rust:8010
      - PHP_URI=http://php:9000
    depends_on:
      - php
      - rust

  proxy-dev:
    <<: *proxy
    profiles:
      - dev
    environment:
      - SITE_HOSTNAME=http://localhost:8000
      - RUST_URI=http://rust-dev:8010
      - PHP_URI=http://php-dev:9000
    ports:
      - 8000:8000
    depends_on:
      - php-dev
      - rust-dev

volumes:
  db_data:
  session_data:
  caddy_data:
  caddy_config:
